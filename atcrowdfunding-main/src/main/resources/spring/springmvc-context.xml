<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.0.xsd">

    <!-- 启用注解功能 -->
    <context:annotation-config />
    
    <!-- 字符串字符编码转换  -->
    <!-- AnnotationMethodHandlerAdapter类已经过时, 但是被RequestMappingHandlerAdapter替代  -->
    <bean class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter" >
        <property name="messageConverters">   
	         <list>
	             <bean class="org.springframework.http.converter.json.MappingJacksonHttpMessageConverter">   
	                <property name="supportedMediaTypes">
	                      <list>
	                          <value>application/json;charset=UTF-8</value>
	                     </list>   
	                </property>   
	             </bean>   
	         </list>   
	    </property>
    </bean>
    
     
     <!-- 
        use-default-filters="true" 事务不起作用.
     	handler依赖于service,会首先从子容器中获取service(子容器的service对象方法是没有事务的.)
     	如果子容器中存在,则利用子容器中提供的service对象;如果子容器中没有,才会从父容器中获取service(有事务的) ;
      -->
    <context:component-scan base-package="com.atguigu.*" use-default-filters="false">
        <context:include-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
    </context:component-scan>
	
	<!-- 视图解析器 -->
    <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <property name="viewClass" value="org.springframework.web.servlet.view.JstlView"></property>
        <property name="prefix" value="/WEB-INF/jsp/"/>
        <property name="suffix" value=".jsp"/>
    </bean>
    
    <!-- 异常解析器:统一异常处理 -->
    <bean id="exceptionResolver"  
        class="org.springframework.web.servlet.handler.SimpleMappingExceptionResolver">  
        <!-- 通过exception来捕获异常类抛出的异常 -->
        <property name="exceptionAttribute" value="exception"></property>
        <property name="exceptionMappings">  
            <props>
                <prop key="java.lang.Exception">error/error</prop>
            </props>  
        </property>  
    </bean>

	<!-- 文件上传解析器 -->
    <bean id="multipartResolver" 
    		class="org.springframework.web.multipart.commons.CommonsMultipartResolver" 
    		p:defaultEncoding="UTF-8">
        <property name="maxUploadSize" value="2097152"/>
        <property name="resolveLazily" value="true"/>
    </bean>
    
    <!-- 配置登录拦截器 -->
    <mvc:interceptors>
    	<!-- 
    		①.声明拦截器(注册拦截器)
    		②.拦截所有的请求
    	 -->
    	<bean id="loginInterceptor" class="com.atguigu.atcrowdfunding.interceptor.LoginInterceptor"></bean>
    	<bean id="authInterceptor" class="com.atguigu.atcrowdfunding.interceptor.AuthInterceptor"></bean>
    </mvc:interceptors>
</beans>
